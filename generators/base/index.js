var Generator = require('yeoman-generator');
var path = require('path');

module.exports = class extends Generator {
  constructor(args, opts) {
    super(args, opts);

    // name of the app based on the directory name generated by React Native
    this.name = process.cwd().split(path.sep).pop();
  }

  writing() {
    // create entry points for Android and iOS
    this.fs.copyTpl(
      this.templatePath('index.ios.js'),
      this.destinationPath('index.ios.js'),
      { name: this.name }
    );

    this.fs.copyTpl(
      this.templatePath('index.android.js'),
      this.destinationPath('index.android.js'),
      { name: this.name }
    );

    // copy root app file that the entry points use
    this.fs.copyTpl(
      this.templatePath('App/App.js'),
      this.destinationPath(`App/${this.name}.js`),
      { name: this.name }
    );

    // copy router
    this.fs.copyTpl(
      this.templatePath('App/Router.js'),
      this.destinationPath('App/Router.js'),
      { name: this.name }
    );

    // copy scenes
    this.fs.copyTpl(
      this.templatePath('App/Scenes/*.js'),
      this.destinationPath('App/Scenes'),
      { name: this.name }
    );

    // copy components
    this.fs.copyTpl(
      this.templatePath('App/Components'),
      this.destinationPath('App/Components'),
      { name: this.name }
    );

    // copy store
    this.fs.copyTpl(
      this.templatePath('App/Store'),
      this.destinationPath('App/Store'),
      { name: this.name }
    );

    // copy reducers
    this.fs.copyTpl(
      this.templatePath('App/Reducers'),
      this.destinationPath('App/Reducers'),
      { name: this.name }
    );

    // copy actions
    this.fs.copyTpl(
      this.templatePath('App/Actions'),
      this.destinationPath('App/Actions'),
      { name: this.name }
    );

    // copy sagas
    this.fs.copyTpl(
      this.templatePath('App/Sagas'),
      this.destinationPath('App/Sagas'),
      { name: this.name }
    );

    // copy services
    this.fs.copyTpl(
      this.templatePath('App/Services'),
      this.destinationPath('App/Services'),
      { name: this.name }
    );

    // copy helpers
    this.fs.copyTpl(
      this.templatePath('App/Helpers'),
      this.destinationPath('App/Helpers'),
      { name: this.name }
    );

    // copy styles
    this.fs.copyTpl(
      this.templatePath('App/Styles'),
      this.destinationPath('App/Styles'),
      { name: this.name }
    );

    // copy config
    this.fs.copyTpl(
      this.templatePath('App/Config'),
      this.destinationPath('App/Config'),
      { name: this.name }
    );

    // copy default .env
    this.fs.copyTpl(
      this.templatePath('.env'),
      this.destinationPath('.env'),
      {
        env: 'development',
        api_url: 'http://localhost:3000',
      }
    );
    this.fs.copyTpl(
      this.templatePath('.env'),
      this.destinationPath('.env.development'),
      {
        env: 'development',
        api_url: 'http://localhost:3000',
      }
    );
    this.fs.copyTpl(
      this.templatePath('.env'),
      this.destinationPath('.env.production'),
      {
        env: 'production',
        api_url: 'http://localhost:3000',
      }
    );

    this.fs.copy(
      this.templatePath('.babelrc'),
      this.destinationPath('.babelrc')
    );

    this.fs.copyTpl(
      this.templatePath('README.md'),
      this.destinationPath('README.md'),
      { name: this.name, nameLower: this.name.toLowerCase() }
    );

    //  copy shell scripts
    this.fs.copyTpl(
      this.templatePath('bin'),
      this.destinationPath('bin'),
      { name: this.name }
    );
  }

  install() {
    // this.npmInstall([
    //   'axios',
    //   'react-native-dotenv',
    //   'react-native-router-flux',
    //   'react-redux',
    //   'redux',
    //   'redux-action-buffer',
    //   'redux-logger',
    //   'redux-persist',
    //   'redux-saga',
    // ], {
    //   'save': true
    // });
  }
};
